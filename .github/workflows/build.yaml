name: Build

on:
  push:
    branches:
      - main
      - release-*
    tags:
      - v*
  pull_request:
    branches:
      - main
      - release-*

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1      

      - uses: actions/setup-go@v3
        with:
          go-version: '1.19'
  
      - uses: acifani/setup-tinygo@v1
        with:
          tinygo-version: 0.25.0

      - uses: actions/setup-go@v3
        with:
          go-version: '1.19'
      
      - name: Install wasm-opt
        run: |
          wget https://github.com/WebAssembly/binaryen/releases/download/version_110/binaryen-version_110-x86_64-linux.tar.gz
          tar -xvzf binaryen-version_110-x86_64-linux.tar.gz
          rm -rf binaryen-version_110-x86_64-linux.tar.gz
          cp binaryen-version_110/bin/wasm-opt /usr/local/bin
          rm -Rf binaryen-version_110
      
      - name: Install tinyjson
        run: go install github.com/CosmWasm/tinyjson/...@latest

      - name: Install Apex CLI
        run: wget -q https://apexlang.io/install.sh -O - | /bin/bash

      - name: Apex code generation
        run: apex generate
      
      - name: Build WebAssembly parser
        run: |
          tinygo build -o apex-parser.wasm -scheduler=none -target=wasi -wasm-abi=generic -no-debug cmd/apex-api/main.go
          wasm-opt -O apex-parser.wasm -o apex-parser.wasm

      - name: Is Release?
        if: startswith(github.ref, 'refs/tags/v')
        run: echo "DEPLOY_PACKAGE=true" >> $GITHUB_ENV

      - name: Upload WebAssebly parser
        if: env.DEPLOY_PACKAGE == 'true'
        uses: actions/upload-artifact@v2
        with: 
          name: Apex Parser Wasm Module
          path: apex-parser.wasm
